<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE func-lib PUBLIC "-//Lucee//DTD CFML Function Library 1.0//EN"
	"dtd/web-cfmfunctionlibrary_1_0.dtd">
<func-lib>
	<flib-version>1.00</flib-version>
	<short-name>esapi</short-name>
	<uri>http://extension.lucee.org/function/esapi</uri>
	<display-name>OWASP - ESAPI</display-name>
	<description>
		OWASP ESAPI functions
	</description>

	<!-- ESAPIDecode -->	
	<function>
		<name>ESAPIDecode</name>
		<class bundle-name="esapi.extension" bundle-version="2.1.0.17">org.lucee.extension.esapi.functions.ESAPIDecode</class>
		<keywords>ESAPI</keywords>
		<description>Decodes a string that has been encoded with ESAPIEncode.</description>
		<argument>
			<name>decodeFrom</name>
			<type>string</type>
			<required>Yes</required>
			<description>given value is encoded as:
- url
</description>
	    </argument>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
			<description>string to encode</description>
	    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	
		
	<!-- ESAPIEncode -->	
	<function>
		<name>ESAPIEncode</name>
		<class bundle-name="esapi.extension" bundle-version="2.1.0.17">org.lucee.extension.esapi.functions.ESAPIEncode</class>
		<keywords>ESAPI,CSS,DN,HTML,JavaScript,ldap,URL,VBScript,XML</keywords>
		<status>deprecated</status>
		<description>Encodes the given string for safe output to stop Cross Site Scripting attacks.</description>
		<argument>
			<name>encodeFor</name>
			<type>string</type>
			<required>Yes</required>
			<description>encode for what, valid values are:
- css: for output inside Cascading Style Sheets (CSS)
- dn: for output in LDAP Distinguished Names
- html: for output inside HTML
- html_attr: for output inside HTML Attributes
- javascript: for output inside Javascript
- ldap: for output in LDAP queries
- url: for output in URL
- vbscript: for output inside vbscript
- xml: for output inside XML
- xml_attr: for output inside XML Attributes
- xpath: for output in XPath
</description>
	    </argument>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
			<description>string to encode</description>
	    </argument>
    	<argument>
			<name>canonicalize</name>
			<type>boolean</type>
			<required>No</required>
			<default>false</default>
			<introduced>5.0.0.0</introduced>
			<description>If set to true, canonicalization happens before encoding. If set to false, the given input string will just be encoded. The default value for canonicalize is false. When this parameter is not specified, canonicalization will not happen. By default, when canonicalization is performed, both mixed and multiple encodings will be allowed. To use any other combinations you should canonicalize using canonicalize method and then do encoding.</description>
    	</argument>
		<return>
			<type>string</type>
		</return>
	</function>

	<!-- decodeForHTML -->
	<function>
		<name>decodeForHTML</name>
		<class bundle-name="esapi.extension" bundle-version="2.1.0.17">org.lucee.extension.esapi.functions.DecodeForHTML</class>
		<member-name>decodeForHTML</member-name>
		<keywords>encode,ESAPI,HTML</keywords>
		<description>Decodes the given encoded string.</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
			<description>string to encode</description>
    	</argument>
		<return>
			<type>string</type>
		</return>
	</function>
	
	<!-- encodeForHTML -->
	<function>
		<name>encodeForHTML</name>
		<class bundle-name="esapi.extension" bundle-version="2.1.0.17">org.lucee.extension.esapi.functions.EncodeForHTML</class>
		<member-name>encodeForHTML</member-name>
		<keywords>encode,ESAPI,HTML</keywords>
		<description>Encodes the given string for safe output in HTML to stop Cross Site Scripting attacks.</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
			<description>string to encode</description>
    	</argument>
    	<argument>
			<name>canonicalize</name>
			<type>boolean</type>
			<required>No</required>
			<default>false</default>
			<introduced>5.0.0.0</introduced>
			<description>If set to true, canonicalization happens before encoding. If set to false, the given input string will just be encoded. The default value for canonicalize is false. When this parameter is not specified, canonicalization will not happen. By default, when canonicalization is performed, both mixed and multiple encodings will be allowed. To use any other combinations you should canonicalize using canonicalize method and then do encoding.</description>
    	</argument>
		<return>
			<type>string</type>
		</return>
	</function>
	
	<!-- encodeForHTMLAttribute -->
	<function>
		<name>encodeForHTMLAttribute</name>
		<class bundle-name="esapi.extension" bundle-version="2.1.0.17">org.lucee.extension.esapi.functions.EncodeForHTMLAttribute</class>
		<member-name>encodeForHTMLAttribute</member-name>
		<keywords>ESAPI,HTML</keywords>
		<description>Encodes the given string for safe output in HTML to stop Cross Site Scripting attacks.</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
			<description>string to encode</description>
    	</argument>
    	<argument>
			<name>canonicalize</name>
			<type>boolean</type>
			<required>No</required>
			<default>false</default>
			<introduced>5.0.0.0</introduced>
			<description>If set to true, canonicalization happens before encoding. If set to false, the given input string will just be encoded. The default value for canonicalize is false. When this parameter is not specified, canonicalization will not happen. By default, when canonicalization is performed, both mixed and multiple encodings will be allowed. To use any other combinations you should canonicalize using canonicalize method and then do encoding.</description>
    	</argument>
		<return>
			<type>string</type>
		</return>
	</function>	
	
	<!-- encodeForCSS -->
	<function>
		<name>encodeForCSS</name>
		<class bundle-name="esapi.extension" bundle-version="2.1.0.17">org.lucee.extension.esapi.functions.EncodeForCSS</class>
		<member-name>encodeForCSS</member-name>
		<keywords>ESAPI,CSS</keywords>
		<description>Encodes the given string for safe output in CSS to stop Cross Site Scripting attacks.</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
			<description>string to encode</description>
    	</argument>
    	<argument>
			<name>canonicalize</name>
			<type>boolean</type>
			<required>No</required>
			<default>false</default>
			<introduced>5.0.0.0</introduced>
			<description>If set to true, canonicalization happens before encoding. If set to false, the given input string will just be encoded. The default value for canonicalize is false. When this parameter is not specified, canonicalization will not happen. By default, when canonicalization is performed, both mixed and multiple encodings will be allowed. To use any other combinations you should canonicalize using canonicalize method and then do encoding.</description>
    	</argument>
		<return>
			<type>string</type>
		</return>
	</function>
	
	<!-- encodeForJavaScript -->
	<function>
		<name>encodeForJavaScript</name>
		<class bundle-name="esapi.extension" bundle-version="2.1.0.17">org.lucee.extension.esapi.functions.EncodeForJavaScript</class>
		<member-name>encodeForJavascript</member-name>
		<keywords>ESAPI,javascript</keywords>
		<description>Encodes the given string for safe output in JavaScript to stop Cross Site Scripting attacks.</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
			<description>string to encode</description>
    	</argument>
    	<argument>
			<name>canonicalize</name>
			<type>boolean</type>
			<required>No</required>
			<default>false</default>
			<introduced>5.0.0.0</introduced>
			<description>If set to true, canonicalization happens before encoding. If set to false, the given input string will just be encoded. The default value for canonicalize is false. When this parameter is not specified, canonicalization will not happen. By default, when canonicalization is performed, both mixed and multiple encodings will be allowed. To use any other combinations you should canonicalize using canonicalize method and then do encoding.</description>
    	</argument>
		<return>
			<type>string</type>
		</return>
	</function>
	
	<!-- encodeForXML -->
	<function>
		<name>encodeForXML</name>
		<class bundle-name="esapi.extension" bundle-version="2.1.0.17">org.lucee.extension.esapi.functions.EncodeForXML</class>
		<member-name>encodeForXML</member-name>
		<keywords>ESAPI,XML</keywords>
		<description>Encodes the given string for safe output in XML to stop Cross Site Scripting attacks.</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
			<description>string to encode</description>
    	</argument>
    	<argument>
			<name>canonicalize</name>
			<type>boolean</type>
			<required>No</required>
			<default>false</default>
			<introduced>5.0.0.0</introduced>
			<description>If set to true, canonicalization happens before encoding. If set to false, the given input string will just be encoded. The default value for canonicalize is false. When this parameter is not specified, canonicalization will not happen. By default, when canonicalization is performed, both mixed and multiple encodings will be allowed. To use any other combinations you should canonicalize using canonicalize method and then do encoding.</description>
    	</argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- encodeForXMLAttribute -->
	<function>
		<name>encodeForXMLAttribute</name>
		<class bundle-name="esapi.extension" bundle-version="2.1.0.17">org.lucee.extension.esapi.functions.EncodeForXMLAttribute</class>
		<member-name>encodeForXMLAttribute</member-name>
		<keywords>ESAPI,XML</keywords>
		<description>Encodes the given string for safe output in XMLAttribute to stop Cross Site Scripting attacks.</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
			<description>string to encode</description>
    	</argument>
    	<argument>
			<name>canonicalize</name>
			<type>boolean</type>
			<required>No</required>
			<default>false</default>
			<introduced>5.0.0.0</introduced>
			<description>If set to true, canonicalization happens before encoding. If set to false, the given input string will just be encoded. The default value for canonicalize is false. When this parameter is not specified, canonicalization will not happen. By default, when canonicalization is performed, both mixed and multiple encodings will be allowed. To use any other combinations you should canonicalize using canonicalize method and then do encoding.</description>
    	</argument>
		<return>
			<type>string</type>
		</return>
	</function>
	<!-- encodeForURL -->	
	<function>
		<name>encodeForURL</name>
		<class bundle-name="esapi.extension" bundle-version="2.1.0.17">org.lucee.extension.esapi.functions.EncodeForURL</class>
		<member-name>encodeForURL</member-name>
		<keywords>ESAPI,URL</keywords>
		<description>Encodes the given string for safe output in a URL.</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
			<description>string to encode</description>
    	</argument>
    	<argument>
			<name>canonicalize</name>
			<type>boolean</type>
			<required>No</required>
			<default>false</default>
			<introduced>5.0.0.0</introduced>
			<description>If set to true, canonicalization happens before encoding. If set to false, the given input string will just be encoded. The default value for canonicalize is false. When this parameter is not specified, canonicalization will not happen. By default, when canonicalization is performed, both mixed and multiple encodings will be allowed. To use any other combinations you should canonicalize using canonicalize method and then do encoding.</description>
    	</argument>
		<return>
			<type>string</type>
		</return>
	</function>
	
	
	<!-- encodeForLDAP -->	
	<function>
		<name>encodeForLDAP</name>
		<class bundle-name="esapi.extension" bundle-version="2.1.0.17">org.lucee.extension.esapi.functions.EncodeForLDAP</class>
		<member-name>encodeForLDAP</member-name>
		<keywords>ESAPI,ldap</keywords>
		<description>Encodes the given string for safe output in LDAP queries.</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
			<description>string to encode</description>
   	 	</argument>
    	<argument>
			<name>canonicalize</name>
			<type>boolean</type>
			<required>No</required>
			<default>false</default>
			<introduced>5.0.0.0</introduced>
			<description>If set to true, canonicalization happens before encoding. If set to false, the given input string will just be encoded. The default value for canonicalize is false. When this parameter is not specified, canonicalization will not happen. By default, when canonicalization is performed, both mixed and multiple encodings will be allowed. To use any other combinations you should canonicalize using canonicalize method and then do encoding.</description>
    	</argument>
		<return>
			<type>string</type>
		</return>
	</function>
	
	<!-- encodeForDN -->	
	<function>
		<name>encodeForDN</name>
		<class bundle-name="esapi.extension" bundle-version="2.1.0.17">org.lucee.extension.esapi.functions.EncodeForDN</class>
		<member-name>encodeForDN</member-name>
		<keywords>ESAPI,DN</keywords>
		<description>Encodes the given string for safe output in LDAP Distinguished Names.</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
			<description>string to encode</description>
    	</argument>
    	<argument>
			<name>canonicalize</name>
			<type>boolean</type>
			<required>No</required>
			<default>false</default>
			<introduced>5.0.0.0</introduced>
			<description>If set to true, canonicalization happens before encoding. If set to false, the given input string will just be encoded. The default value for canonicalize is false. When this parameter is not specified, canonicalization will not happen. By default, when canonicalization is performed, both mixed and multiple encodings will be allowed. To use any other combinations you should canonicalize using canonicalize method and then do encoding.</description>
    	</argument>
		<return>
			<type>string</type>
		</return>
	</function>
	
	<!-- encodeForXPath -->	
	<function>
		<name>encodeForXPath</name>
		<class bundle-name="esapi.extension" bundle-version="2.1.0.17">org.lucee.extension.esapi.functions.EncodeForXPath</class>
		<member-name>encodeForXPath</member-name>
		<keywords>ESAPI,XML</keywords>
		<description>Encodes the given string for safe use in an XPath Query.</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
			<description>string to encode</description>
    	</argument>
    	<argument>
			<name>canonicalize</name>
			<type>boolean</type>
			<required>No</required>
			<default>false</default>
			<introduced>5.0.0.0</introduced>
			<description>If set to true, canonicalization happens before encoding. If set to false, the given input string will just be encoded. The default value for canonicalize is false. When this parameter is not specified, canonicalization will not happen. By default, when canonicalization is performed, both mixed and multiple encodings will be allowed. To use any other combinations you should canonicalize using canonicalize method and then do encoding.</description>
    	</argument>
		<return>
			<type>string</type>
		</return>
	</function>
	
	
	<!-- decodeFromURL -->	
	<function>
		<name>decodeFromURL</name>
		<class bundle-name="esapi.extension" bundle-version="2.1.0.17">org.lucee.extension.esapi.functions.DecodeFromURL</class>
		<member-name>decodeFromURL</member-name>
		<keywords>ESAPI,URL</keywords>
		<description>Decodes a string that has been encoded in the URL using the encodeForURL.
		this function is deprecated, use function ESAPIDecode('url',...) instead.</description>
		<argument>
			<name>string</name>
			<type>string</type>
			<required>Yes</required>
		<description>string to encode</description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>
	

	<!-- Canonicalize -->
	<function>
		<name>Canonicalize</name>
		<class bundle-name="esapi.extension" bundle-version="2.1.0.17">org.lucee.extension.esapi.functions.Canonicalize</class>
		<description>Canonicalization is simply the operation of reducing a possibly encoded string down to its simplest form. 
		This is important, because attackers frequently use encoding to change their input in a way that will bypass validation filters, 
		but still be interpreted properly by the target of the attack. 
		Note that data encoded more than once is not something that a normal user would generate and should be regarded as an attack.</description>
		<argument>
			<name>input</name>
			<alias>inputString</alias>
			<type>string</type>
			<required>Yes</required>
			<description>the input string to encode</description>
	    </argument>
		<argument>
			<name>restrictMultiple</name>
			<alias>multiple</alias>
			<type>boolean</type>
			<required>Yes</required>
			<description>true if checking for multiple encoding is desired, false otherwise.</description>
	    </argument>
		<argument>
			<name>restrictMixed</name>
			<alias>mixed</alias>
			<type>boolean</type>
			<required>Yes</required>
			<description>true if checking for mixed encoding is desired, false otherwise</description>
	    </argument>
		<return>
			<type>string</type>
		</return>
	</function>



	<!-- GetSafeHTML
	<function>
		<name>GetSafeHTML</name>
		<class bundle-name="esapi.extension" bundle-version="2.1.0.17">org.lucee.extension.esapi.functions.GetSafeHTML</class>
		<member-name>getSafeHTML</member-name>
		<keywords>ESAPI,HTML</keywords>
		<description>Sanitizes the given input string based on the the rules specified in an antisamy policy file. 
		This can be used to prevent unwanted user supplied HTML being used in an application. the antisamy policy file can be passed as argument to this function or can be defined in the application scope with the argument "this.security.antisamypolicy". if no file is defined the default file is used that is located in the web context in the folder security.
		</description>
		<argument>
			<name>input</name>
			<alias>inputString</alias>
			<type>string</type>
			<required>Yes</required>
		<description>the HTML String to encode</description>
    </argument>
		<argument>
			<name>policy</name>
			<alias>policyFile</alias>
			<type>string</type>
			<required>No</required>
		<description>File path for antisamy policy file which specifies HTML rules.</description>
    </argument>
		<argument>
			<name>throwOnError</name>
			<type>boolean</type>
			<required>No</required>
		<description>if it fails to sanitize the HTML and this is set to true, an exception is thrown.</description>
    </argument>
		<return>
			<type>string</type>
		</return>
	</function>  -->
	
</func-lib>